{
  "version": 3,
  "sources": ["../../../../../src/routes/api/add/+server.ts"],
  "sourcesContent": ["import type { RequestEvent, RequestHandler } from \"./$types\";\n\nimport type { DatabaseBan, DatabasePlayer } from \"$ts/database/schemas\";\n\nimport { getIdByCode, getPlayersById } from \"$ts/api/slippi\";\nimport { respond } from \"$ts/api/respond\";\n\nimport dbPromise from \"$ts/database/database\";\n\nexport const POST: RequestHandler = async (event: RequestEvent) => {\n    const db = await dbPromise;\n\n    const bansCollection = db.collection<DatabaseBan>(\"bans\");\n\n    if (await bansCollection.findOne({ ip: event.getClientAddress() })) {\n        return respond(403, {\n            \"status\": \"error\",\n            \"message\": \"no\"\n        });\n    }\n\n    const json = await event.request.json();\n\n    if (!json.code) {\n        return respond(400, {\n            \"status\": \"error\",\n            \"message\": \"No code provided!\"\n        });\n    }\n\n    if (!json.name) {\n        return respond(400, {\n            \"status\": \"error\",\n            \"message\": \"No name provided!\"\n        });\n    }\n\n    console.log(`Trying to add ${json.name} (${json.code})...`);\n\n    const collection = db.collection<DatabasePlayer>(\"players\");\n\n    const id = await getIdByCode(json.code);\n\n    if (!id) {\n        return respond(404, {\n            \"status\": \"error\",\n            \"message\": \"Player not found!\"\n        });\n    }\n\n    if (await collection.findOne({ id })) {\n        return respond(409, {\n            \"status\": \"error\",\n            \"message\": \"Player already exists!\"\n        });\n    }\n\n    const playerData = await getPlayersById([id]);\n\n    const player: DatabasePlayer = {\n        id,\n        name: json.name,\n\n        data: playerData[0],\n\n        addedIp: event.getClientAddress(),\n        addedDate: new Date()\n    }\n\n    collection.insertOne(player);\n\n    return respond(201, {\n        \"status\": \"success\",\n        \"data\": {\n            \"slug\": playerData[0].slippi_code.toLowerCase().replace(\"#\", \"-\")\n        }\n    });\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA,oBAA4C;AAC5C,qBAAwB;AAExB,sBAAsB;AAEf,MAAM,OAAuB,OAAO,UAAwB;AAC/D,QAAM,KAAK,MAAM,gBAAAA;AAEjB,QAAM,iBAAiB,GAAG,WAAwB,MAAM;AAExD,MAAI,MAAM,eAAe,QAAQ,EAAE,IAAI,MAAM,iBAAiB,EAAE,CAAC,GAAG;AAChE,eAAO,wBAAQ,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,WAAW;AAAA,IACf,CAAC;AAAA,EACL;AAEA,QAAM,OAAO,MAAM,MAAM,QAAQ,KAAK;AAEtC,MAAI,CAAC,KAAK,MAAM;AACZ,eAAO,wBAAQ,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,WAAW;AAAA,IACf,CAAC;AAAA,EACL;AAEA,MAAI,CAAC,KAAK,MAAM;AACZ,eAAO,wBAAQ,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,WAAW;AAAA,IACf,CAAC;AAAA,EACL;AAEA,UAAQ,IAAI,iBAAiB,KAAK,SAAS,KAAK,UAAU;AAE1D,QAAM,aAAa,GAAG,WAA2B,SAAS;AAE1D,QAAM,KAAK,UAAM,2BAAY,KAAK,IAAI;AAEtC,MAAI,CAAC,IAAI;AACL,eAAO,wBAAQ,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,WAAW;AAAA,IACf,CAAC;AAAA,EACL;AAEA,MAAI,MAAM,WAAW,QAAQ,EAAE,GAAG,CAAC,GAAG;AAClC,eAAO,wBAAQ,KAAK;AAAA,MAChB,UAAU;AAAA,MACV,WAAW;AAAA,IACf,CAAC;AAAA,EACL;AAEA,QAAM,aAAa,UAAM,8BAAe,CAAC,EAAE,CAAC;AAE5C,QAAM,SAAyB;AAAA,IAC3B;AAAA,IACA,MAAM,KAAK;AAAA,IAEX,MAAM,WAAW;AAAA,IAEjB,SAAS,MAAM,iBAAiB;AAAA,IAChC,WAAW,IAAI,KAAK;AAAA,EACxB;AAEA,aAAW,UAAU,MAAM;AAE3B,aAAO,wBAAQ,KAAK;AAAA,IAChB,UAAU;AAAA,IACV,QAAQ;AAAA,MACJ,QAAQ,WAAW,GAAG,YAAY,YAAY,EAAE,QAAQ,KAAK,GAAG;AAAA,IACpE;AAAA,EACJ,CAAC;AACL;",
  "names": ["dbPromise"]
}
